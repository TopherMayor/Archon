services:
  # Server Service (FastAPI + Socket.IO + Crawling)
  archon-server:
    build:
      context: ./python
      dockerfile: Dockerfile.server
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_SERVER_PORT: ${ARCHON_SERVER_PORT:-8181}
    container_name: Archon-Server
    ports:
      - "${ARCHON_SERVER_PORT:-8181}:${ARCHON_SERVER_PORT:-8181}"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
    labels:
      - "traefik.enable=true"
      - "traefik.uds-label=true"
      # HTTP
      - "traefik.http.routers.archon-api.entrypoints=http"
      - "traefik.http.routers.archon-api.rule=Host(`archon.uds.tophermayor.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.archon-api.middlewares=https-redirectscheme@file"
      - "traefik.http.services.archon-api.loadbalancer.server.port=${ARCHON_SERVER_PORT:-8181}"
      # HTTPS
      - "traefik.http.routers.archon-api-secure.entrypoints=https"
      - "traefik.http.routers.archon-api-secure.rule=Host(`archon.uds.tophermayor.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.archon-api-secure.tls=true"
    networks:
      - app-network
      - traefik-uds
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket for MCP container control
      - ./python/src:/app/src  # Mount source code for hot reload
      - ./python/tests:/app/tests  # Mount tests for UI test execution
    command: ["python", "-m", "uvicorn", "src.server.main:socket_app", "--host", "0.0.0.0", "--port", "${ARCHON_SERVER_PORT:-8181}", "--reload"]
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:${ARCHON_SERVER_PORT:-8181}/health')\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Lightweight MCP Server Service (HTTP-based)
  archon-mcp:
    build:
      context: ./python
      dockerfile: Dockerfile.mcp
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_MCP_PORT: ${ARCHON_MCP_PORT:-8051}
    container_name: Archon-MCP
    ports:
      - "${ARCHON_MCP_PORT:-8051}:${ARCHON_MCP_PORT:-8051}"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - TRANSPORT=sse
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # MCP needs to know where to find other services
      - API_SERVICE_URL=http://archon-server:${ARCHON_SERVER_PORT:-8181}
      - AGENTS_SERVICE_URL=http://archon-agents:${ARCHON_AGENTS_PORT:-8052}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
    labels:
      - "traefik.enable=true"
      - "traefik.uds-label=true"
      # Middleware to strip /mcp so backend sees root paths
      - "traefik.http.middlewares.archon-mcp-strip.stripPrefix.prefixes=/mcp"
      # HTTP
      - "traefik.http.routers.archon-mcp.entrypoints=http"
      - "traefik.http.routers.archon-mcp.rule=Host(`archon.uds.tophermayor.com`) && PathPrefix(`/mcp`)"
      - "traefik.http.routers.archon-mcp.middlewares=https-redirectscheme@file,archon-mcp-strip@docker"
      - "traefik.http.services.archon-mcp.loadbalancer.server.port=${ARCHON_MCP_PORT:-8051}"
      # HTTPS
      - "traefik.http.routers.archon-mcp-secure.entrypoints=https"
      - "traefik.http.routers.archon-mcp-secure.rule=Host(`archon.uds.tophermayor.com`) && PathPrefix(`/mcp`)"
      - "traefik.http.routers.archon-mcp-secure.middlewares=archon-mcp-strip@docker"
      - "traefik.http.routers.archon-mcp-secure.tls=true"
    networks:
      - app-network
      - traefik-uds
    depends_on:
      - archon-server
      - archon-agents
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import socket; s=socket.socket(); s.connect(('localhost', ${ARCHON_MCP_PORT:-8051})); s.close()\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Give dependencies time to start

  # AI Agents Service (ML/Reranking)
  archon-agents:
    build:
      context: ./python
      dockerfile: Dockerfile.agents
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_AGENTS_PORT: ${ARCHON_AGENTS_PORT:-8052}
    container_name: Archon-Agents
    ports:
      - "${ARCHON_AGENTS_PORT:-8052}:${ARCHON_AGENTS_PORT:-8052}"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
    labels:
      - "traefik.enable=true"
      - "traefik.uds-label=true"
      # Middleware to strip /agents so backend sees root paths
      - "traefik.http.middlewares.archon-agents-strip.stripPrefix.prefixes=/agents"
      # HTTP
      - "traefik.http.routers.archon-agents.entrypoints=http"
      - "traefik.http.routers.archon-agents.rule=Host(`archon.uds.tophermayor.com`) && PathPrefix(`/agents`)"
      - "traefik.http.routers.archon-agents.middlewares=https-redirectscheme@file,archon-agents-strip@docker"
      - "traefik.http.services.archon-agents.loadbalancer.server.port=${ARCHON_AGENTS_PORT:-8052}"
      # HTTPS
      - "traefik.http.routers.archon-agents-secure.entrypoints=https"
      - "traefik.http.routers.archon-agents-secure.rule=Host(`archon.uds.tophermayor.com`) && PathPrefix(`/agents`)"
      - "traefik.http.routers.archon-agents-secure.middlewares=archon-agents-strip@docker"
      - "traefik.http.routers.archon-agents-secure.tls=true"
    networks:
      - app-network
      - traefik-uds
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:${ARCHON_AGENTS_PORT:-8052}/health')\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build: ./archon-ui-main
    container_name: Archon-UI
    ports:
      - "${ARCHON_UI_PORT:-3737}:5173"
    environment:
      - VITE_API_URL=http://${HOST:-localhost}:${ARCHON_SERVER_PORT:-8181}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - HOST=${HOST:-localhost}
    labels:
      - "traefik.enable=true"
      - "traefik.uds-label=true"
      # HTTP
      - "traefik.http.routers.archon-ui.entrypoints=http"
      - "traefik.http.routers.archon-ui.rule=Host(`archon.uds.tophermayor.com`)"
      - "traefik.http.routers.archon-ui.middlewares=https-redirectscheme@file"
      - "traefik.http.services.archon-ui.loadbalancer.server.port=5173"
      # HTTPS
      - "traefik.http.routers.archon-ui-secure.entrypoints=https"
      - "traefik.http.routers.archon-ui-secure.rule=Host(`archon.uds.tophermayor.com`)"
      - "traefik.http.routers.archon-ui-secure.tls=true"
    networks:
      - app-network
      - traefik-uds
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./archon-ui-main/src:/app/src
      - ./archon-ui-main/public:/app/public
    depends_on:
      - archon-server

networks:
  app-network:
    driver: bridge
  traefik-uds:
    external: true